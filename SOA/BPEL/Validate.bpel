<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Thu Jul 20 15:30:24 IST 2017
  Author:  sykumar
  Type: BPEL 2.0 Process
  Purpose: Asynchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="Validate"
         targetNamespace="http://xmlns.oracle.com/SampleFileTransfer/SampleProject/Validate"
         xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:client="http://xmlns.oracle.com/SampleFileTransfer/SampleProject/Validate"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:ui="http://xmlns.oracle.com/soa/designer"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/file/SampleFileTransfer/SampleProject/fileService"
         xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/file/SampleFileTransfer/SampleProject/fileReference"
         xmlns:ns3="http://www.w3.org">
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <import namespace="http://xmlns.oracle.com/pcbpel/adapter/file/SampleFileTransfer/SampleProject/fileService"
            location="../WSDLs/fileService.wsdl" importType="http://schemas.xmlsoap.org/wsdl/" ui:processWSDL="true"/>
    <partnerLinks>
        <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
        <partnerLink name="fileService" partnerLinkType="ns1:Read_plt" myRole="Read_role"/>
        <partnerLink name="fileReference" partnerLinkType="ns2:Write_plt" partnerRole="Write_role"/>
    </partnerLinks>

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        VARIABLES                                                        
        List of messages and XML documents used within this BPEL process 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <variables>
        <!-- Reference to the message passed as input during initiation -->

        <!-- Reference to the message that will be sent back to the requester during callback -->
        <variable name="receiveInput_Read_InputVariable" messageType="ns1:Read_msg"/>
        <variable name="fileOuput" messageType="ns2:Write_msg"/>
    </variables>

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       ORCHESTRATION LOGIC                                               
       Set of activities coordinating the flow of messages across the    
       services integrated within this business process                  
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <sequence name="main">
        <!-- Receive input from requestor. (Note: This maps to operation defined in Validate.wsdl) -->
        <receive name="receiveInput" partnerLink="fileService" portType="ns1:Read_ptt" operation="Read"
                 variable="receiveInput_Read_InputVariable" createInstance="yes"/>
        <assign name="Assign1">
            <copy>
                <from>$receiveInput_Read_InputVariable.body</from>
                <to>$fileOuput.body</to>
            </copy>
        </assign>
        <!-- 
          Asynchronous callback to the requester. (Note: the callback location and correlation id is transparently handled using WS-addressing.)
        -->
        <invoke name="callbackClient" partnerLink="fileReference" portType="ns2:Write_ptt" operation="Write"
                inputVariable="fileOuput" bpelx:invokeAsDetail="no"/>
    </sequence>
</process>